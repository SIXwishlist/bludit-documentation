Title: Mein zweites Theme
Position: 3
Content:

Bei diesem Beispiel heisst das Theme `Mars`.

## 1. Verzeichnis-Struktur
Lege zuerst das Verzeichnis für das Theme im Verzeichnis `/themes/` an, so dass du ein Verzeichnis `/themes/mars/` hast.

Dann lege die Verzeichnisse für die Sprach-, CSS- und JavaScript-Dateien an:
- Lege das Verzeichnis `languages` im Verzeichnis `/themes/mars/` an.
- Lege das Verzeichnis `css` im Verzeichnis `/themes/mars/` an.
- Lege das Verzeichnis `js` im Verzeichnis `/themes/mars/` an.

```
/themes/mars/
	css/
	js/
	language/
```

## 2. Informationen zum Theme
Lege eine Datei `en_US.json` im Verzeichnis `/themes/mars/languages/` mit den Informationen zum Theme an. In unserem Beispiel mit dem JSON-Code:

<pre><code data-language="php">{
	"theme-data":
	{
		"name": "Mars",
		"description": "Mein zweites Theme für Bludit.",
		"author": "Ich",
		"email": "",
		"website": "http://www.bludit.com",
		"version": "1.0",
		"releaseDate": "2015-10-23"
	}
}
</code></pre>

## 3. Datei index.php
Lege nun eine Datei `index.php` im Verzeichnis `/themes/mars/` an mit folgendem HTML-Code:

<pre><code data-language="html"><!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">
</head>
<body>

</body>
</html>
</code></pre>

### 3.1. CSS-Dateien
Um CSS-Dateien hinzuzufügen, kannst du den Helper `Theme::` verwenden oder `meta tags`.

Lege die CSS-Datei `blog.css` mit einem Meta-Tag.
<pre><code data-language="html"><!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">

	<!-- CSS -->
	<link rel="stylesheet" type="text/css" href="<?php echo HTML_PATH_THEME_CSS.'blog.css' ?>">
</head>
<body>

</body>
</html>
</code></pre>

Lege die CSS-Datei `blog.css` mit einem "Helper" an.
<pre><code data-language="html"><!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">

	<!-- CSS -->
	<?php Theme::css('blog.css') ?>
</head>
<body>

</body>
</html>
</code></pre>

### 3.2. JavaScript files
Add some JavaScript files, you can use the Helper `Theme::` or use the `meta tag`.

Add the `blog.js` JavaScript file with meta tag.
<pre><code data-language="html"><!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">

	<!-- CSS -->
	<link rel="stylesheet" type="text/css" href="<?php echo HTML_PATH_THEME_CSS.'blog.css' ?>">

	<!-- Javascript -->
	<script src="<?php echo HTML_PATH_THEME_JS.'blog.js' ?>"></script>
</head>
<body>

</body>
</html>
</code></pre>

Add the `blog.js` JavaScript file with the Helper.
<pre><code data-language="html"><!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">

	<!-- CSS -->
	<?php Theme::css('blog.css') ?>

	<!-- Javascript -->
	<?php Theme::javascript('blog.js') ?>
</head>
<body>

</body>
</html>
</code></pre>

Wie Du siehst, braucht der "Helper" weniger Code. :D

### 3.3. Plugins im Header
Um Plugins im Header einzufügen, hannst du den "Helper" `Theme::plugins` verwenden.

<pre><code data-language="html"><!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">

	<!-- CSS -->
	<?php Theme::css('blog.css') ?>

	<!-- Javascript -->
	<?php Theme::javascript('blog.js') ?>

	<!-- Plugins site head -->
	<?php Theme::plugins('siteHead') ?>
</head>
<body>

</body>
</html>
</code></pre>

### 3.4. Titel der Website
Jetzt fügen fügen wir im Header-Bereich den Meta-Tag für den Titel und Inhaltsbereich den Titel ein.

<pre><code data-language="html"><!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">

	<!-- Meta tag Title -->
	<title><?php echo $Site->title() ?></title>

	<!-- CSS -->
	<?php Theme::css('blog.css') ?>

	<!-- Javascript -->
	<?php Theme::javascript('blog.js') ?>

	<!-- Plugins site head -->
	<?php Theme::plugins('siteHead') ?>
</head>
<body>
	<!-- Site Title -->
	<h1><?php echo $Site->title() ?></h1>
</body>
</html>
</code></pre>

### 3.5. Inhalt (Hauptseite, Beiträge und Seiten)
Now lets works with the content of the site, as posts and pages.

To know where are the user browsing on your site will be use the object `$Url` and the method `whereAmI()`. For example if the user is watching a post the method `$Url->whereAmI()` returns the string `post`, or if the user is watching a page the method `$Url->whereAmI()` returns the string `page`.

<pre><code data-language="html"><!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">

	<!-- Meta tag Title -->
	<title><?php echo $Site->title() ?></title>

	<!-- CSS -->
	<?php Theme::css('blog.css') ?>

	<!-- Javascript -->
	<?php Theme::javascript('blog.js') ?>

	<!-- Plugins site head -->
	<?php Theme::plugins('siteHead') ?>
</head>
<body>
	<!-- Site Title -->
	<h1><?php echo $Site->title() ?></h1>

	<?php
		if( $Url->whereAmI()=='home' ) {
			echo 'The user is browsing the Home page';
		}
		elseif($Url->whereAmI()=='post') {
			echo 'The user is browsing a particular post';
		}
		elseif($Url->whereAmI()=='page') {
			echo 'The user is browsing a particular page';
		}
	?>
</body>
</html>
</code></pre>

If the user is in the home page, Bludit generate an array `$posts` with all the posts, each post is an [object $Post](https://).

<pre><code data-language="html"><!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">

	<!-- Meta tag Title -->
	<title><?php echo $Site->title() ?></title>

	<!-- CSS -->
	<?php Theme::css('blog.css') ?>

	<!-- Javascript -->
	<?php Theme::javascript('blog.js') ?>

	<!-- Plugins site head -->
	<?php Theme::plugins('siteHead') ?>
</head>
<body>
	<!-- Site Title -->
	<h1><?php echo $Site->title() ?></h1>

	<?php
		if( $Url->whereAmI()=='home' ) {

			foreach($posts as $Post) {
				echo '<h2>'.$Post->title().'</h2>';
				echo '<div>'.$Post->content().'</div>';
				echo '<hr>';
			}

		}
		elseif($Url->whereAmI()=='post') {
			echo 'The user is browsing a particular post';
		}
		elseif($Url->whereAmI()=='page') {
			echo 'The user is browsing a particular page';
		}
	?>
</body>
</html>
</code></pre>

If the user is watching a particular post, Bludit generate an object `$Post`, on it you have a lot of methods, in this example will be use the methods `title()` and `content()`. To know other methods check the next page [object $Post](http://).

<pre><code data-language="html"><!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">

	<!-- Meta tag Title -->
	<title><?php echo $Site->title() ?></title>

	<!-- CSS -->
	<?php Theme::css('blog.css') ?>

	<!-- Javascript -->
	<?php Theme::javascript('blog.js') ?>

	<!-- Plugins site head -->
	<?php Theme::plugins('siteHead') ?>
</head>
<body>
	<!-- Site Title -->
	<h1><?php echo $Site->title() ?></h1>

	<?php
		if( $Url->whereAmI()=='home' ) {

			foreach($posts as $Post) {
				echo '<h2>'.$Post->title().'</h2>';
				echo '<div>'.$Post->content().'</div>';
				echo '<hr>';
			}

		}
		elseif($Url->whereAmI()=='post') {

			echo '<h2>'.$Post->title().'</h2>';
			echo '<div>'.$Post->content().'</div>';

		}
		elseif($Url->whereAmI()=='page') {
			echo 'The user is browsing a particular page';
		}
	?>
</body>
</html>
</code></pre>

Wenn eine Besucher oder eine Besucherin eine Seite aufruft, generiert Bludit ein Objekt `$Page`. Dieses Enhält eine Vielzahl von Methoden. In unserem Beispiel werden die Methoden `title()` und `content()` verwendet. Weitere Methoden findet Du unter [object $Page](http://).

<pre><code data-language="html"><!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">

	<!-- Meta tag Title -->
	<title><?php echo $Site->title() ?></title>

	<!-- CSS -->
	<?php Theme::css('blog.css') ?>

	<!-- Javascript -->
	<?php Theme::javascript('blog.js') ?>

	<!-- Plugins site head -->
	<?php Theme::plugins('siteHead') ?>
</head>
<body>
	<!-- Site Title -->
	<h1><?php echo $Site->title() ?></h1>

	<?php
		if( $Url->whereAmI()=='home' ) {

			foreach($posts as $Post) {
				echo '<h2>'.$Post->title().'</h2>';
				echo '<div>'.$Post->content().'</div>';
				echo '<hr>';
			}

		}
		elseif($Url->whereAmI()=='post') {

			echo '<h2>'.$Post->title().'</h2>';
			echo '<div>'.$Post->content().'</div>';

		}
		elseif($Url->whereAmI()=='page') {

			echo '<h2>'.$Page->title().'</h2>';
			echo '<div>'.$Page->content().'</div>';

		}
	?>
</body>
</html>
</code></pre>

### 3.6. Pluginbereiche am Anfang und Ende des Body-Bereichs
Zum Schluss füge den Code hinzu, der die Verwendung von Plugins erlaubt.

<pre><code data-language="html"><!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">

	<!-- Meta tag Title -->
	<title><?php echo $Site->title() ?></title>

	<!-- CSS -->
	<?php Theme::css('blog.css') ?>

	<!-- Javascript -->
	<?php Theme::javascript('blog.js') ?>

	<!-- Plugins site head -->
	<?php Theme::plugins('siteHead') ?>
</head>
<body>
	<!-- Plugins site body begin -->
	<?php Theme::plugins('siteBodyBegin') ?>

	<!-- Site Title -->
	<h1><?php echo $Site->title() ?></h1>

	<?php
		if( $Url->whereAmI()=='home' ) {

			foreach($posts as $Post) {
				echo '<h2>'.$Post->title().'</h2>';
				echo '<div>'.$Post->content().'</div>';
				echo '<hr>';
			}

		}
		elseif($Url->whereAmI()=='post') {

			echo '<h2>'.$Post->title().'</h2>';
			echo '<div>'.$Post->content().'</div>';

		}
		elseif($Url->whereAmI()=='page') {

			echo '<h2>'.$Page->title().'</h2>';
			echo '<div>'.$Page->content().'</div>';

		}
	?>

	<!-- Plugins site body end -->
	<?php Theme::plugins('siteBodyEnd') ?>

</body>
</html>
</code></pre>
